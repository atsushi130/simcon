#!/usr/bin/env ruby

require 'singleton'

def log message
  puts "===> #{message}".green
end

def error massage
  puts massage.red
  exit 1
end

class String
  def colorize color_code
    "\e[#{color_code}m#{self}\e[0m"
  end

  def red() colorize 31 end
  def green() colorize 32 end
end

class Configuration

  include Singleton
  attr_reader :configuration

  def initialize
    configuration = ARGV[0]
    case configuration
    when "Development", "development", "Debug", "debug" then
      @configuration = "Debug"
    when "Staging", "staging" then
      @configuration = "Staging"
    when "Production", "production" then
      @configuration = "Production"
    end
  end
end

class App

  def initialize app
    @app = app
  end

  def path
    app_dir = `ls ~/Library/Developer/Xcode/DerivedData/ | grep #{@app}`.gsub(/\n/, "")
    build_dir_path = "~/Library/Developer/Xcode/DerivedData/#{app_dir}/Build/Products"
    app = `ls #{build_dir_path} | grep #{Configuration.instance.configuration} | grep iphonesimulator`.gsub(/\n/, "")
    "#{build_dir_path}/#{app}/#{@app}.app"
  end

  def bundle_identifier
    case Configuration.instance.configuration
    when "Debug" then
      "development bundle identifier"
    when "Staging" then
      "staging bundle identifier"
    when "Production" then
      "production bundle identifier"
    end
  end

  def build
    `xcodebuild -workspace #{@app}.xcworkspace -scheme #{@app} -configuration #{Configuration.instance.configuration} -sdk iphonesimulator > /dev/null 2>&1`
    error 'failed build' if $?.exitstatus == 1
  end
end

